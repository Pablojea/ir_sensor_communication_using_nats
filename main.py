import asyncio
import argparse
import nats

async def main():

    parser = argparse.ArgumentParser()
    parser.add_argument('-t', '--type',
                        choices=['mockup', 'real'],
                        default='mockup',
                        help="Specifies weather the sensor values are randomly generated or come from a real sensor")

    parser.add_argument('-i', '--interval',
                        type=float,
                        default=2.0,
                        help="Time elapsed between sensor data packages sent")

    parser.add_argument('-r', '--range',
                        type=int,
                        nargs=2,
                        default=[0, 50],
                        help=""
                             "Minimun and maximum values that can be generated by the mockup sensor")

    args = parser.parse_args()
    sensor_type = args.type
    interval = args.interval
    data_range = args.range

    print("Starting application  with following configuration:")
    print(f"sensor_type: {sensor_type}")
    print(f"interval: {interval}")
    print(f"sensor_range: {data_range}")


    async def message_handler(msg):
        data = msg.data.decode()
        print(data)


    nats_conection = await nats.connect('nats://localhost:4222')
    sensor_control_sub = await nats_conection.subscribe("ir_sensor.control", cb=message_handler)

    while True:
        await nats_conection.publish('ir_sensor.data', b'Dummy Data')
        await asyncio.sleep(interval)

if __name__ == '__main__':
    asyncio.run(main())